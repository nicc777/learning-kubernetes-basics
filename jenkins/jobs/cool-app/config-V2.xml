<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>A build of the Cool App Service</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>coolapp-origin</name>
        <url>https://github.com/nicc777/learning-kubernetes-basics</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/appsrc-develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>0 * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

cd ./app-src/
echo &quot;Checking if any of the Docker configurations changed&quot;

DOCKERFILE_BASE_CHECKSUM_FILE=&quot;docker_base_checksum&quot;
DOCKERFILE_COOLAPP_CHECKSUM_FILE=&quot;docker_coolapp_checksum&quot;
DOCKERFILE_BASE_CHECKSUM_OLD=&quot;&quot;
DOCKERFILE_BASE_CHECKSUM_CURRENT=&quot;&quot;
DOCKERFILE_COOLAPP_CHECKSUM_OLD=&quot;&quot;
DOCKERFILE_COOLAPP_CHECKSUM_CURRENT=&quot;&quot;
BUILD_BASE=0
BUILD_COOLAPP=0
DOCKER_REGISTRY_HOST=&quot;192.168.0.160&quot;
DOCKER_REGISTRY_PORT=&quot;5000&quot;


echo &quot;========================================&quot;
echo &quot;   Checking BASE Docker configuration&quot;
echo &quot;========================================&quot;


DOCKERFILE_BASE_CHECKSUM_CURRENT=`sha256sum ./container/base/Dockerfile | awk &apos;{print \$1}&apos;`
echo &quot;   Current BASE file checksum: $DOCKERFILE_BASE_CHECKSUM_CURRENT&quot;
if test -f &quot;$DOCKERFILE_BASE_CHECKSUM_FILE&quot;; then
    echo &quot;      $DOCKERFILE_BASE_CHECKSUM_FILE exist&quot;
    DOCKERFILE_BASE_CHECKSUM_OLD=`cat $DOCKERFILE_BASE_CHECKSUM_FILE | head -1 | awk &apos;{print \$1}&apos;`
    echo &quot;   Previous BASE file checksum: $DOCKERFILE_BASE_CHECKSUM_OLD&quot;
    if [ &quot;$DOCKERFILE_BASE_CHECKSUM_OLD&quot; != &quot;$DOCKERFILE_BASE_CHECKSUM_CURRENT&quot; ]; then
    	BUILD_BASE=1
        BUILD_COOLAPP=1
    fi
else
	echo &quot;newfile&quot; &gt; $DOCKERFILE_BASE_CHECKSUM_FILE
    echo &quot;      $DOCKERFILE_BASE_CHECKSUM_FILE created&quot;
    BUILD_BASE=1
    BUILD_COOLAPP=1
fi

echo &quot;      BUILD_BASE=$BUILD_BASE&quot;

if [ &quot;$BUILD_BASE&quot; == &quot;1&quot; ]; then
	echo &quot;      Building BASE Docker Image&quot;
    sudo docker container rm cool-app-base
	sudo docker image rm cool-app-base
	cd container/base
    echo &quot;      Current working directory: $PWD&quot;
	sudo docker build --no-cache -t cool-app-base .
    EXIT_STATUS=$?
    cd $OLDPWD
    echo &quot;      status=$EXIT_STATUS&quot;
    echo &quot;      Current working directory: $PWD&quot;
    if [ &quot;$EXIT_STATUS&quot; != &quot;0&quot; ]
	then
   		echo &quot;      BASE failed to build&quot;
        exit 1
	fi
    echo &quot;      BASE build successful&quot;
    echo $DOCKERFILE_BASE_CHECKSUM_CURRENT &gt; $DOCKERFILE_BASE_CHECKSUM_FILE
    echo &quot;      Checksum file updated&quot;
fi


echo &quot;========================================&quot;
echo &quot;   Checking APP build history&quot;
echo &quot;========================================&quot;

rm -vf /tmp/test.tar.gz
tar czf /tmp/test.tar.gz `find ./cool_app/ -type f -iname &quot;*.py&quot;`
DOCKERFILE_COOLAPP_CHECKSUM_CURRENT=`sha256sum ./container/base/Dockerfile | awk &apos;{print \$1}&apos;`
echo &quot;   Current BASE file checksum: $DOCKERFILE_COOLAPP_CHECKSUM_CURRENT&quot;
if test -f &quot;$DOCKERFILE_COOLAPP_CHECKSUM_FILE&quot;; then
    echo &quot;      $DOCKERFILE_COOLAPP_CHECKSUM_FILE exist&quot;
    DOCKERFILE_COOLAPP_CHECKSUM_OLD=`cat $DOCKERFILE_COOLAPP_CHECKSUM_FILE | head -1 | awk &apos;{print \$1}&apos;`
    echo &quot;   Previous APP file checksum: $DOCKERFILE_COOLAPP_CHECKSUM_OLD&quot;
    if [ &quot;$DOCKERFILE_COOLAPP_CHECKSUM_OLD&quot; != &quot;$DOCKERFILE_COOLAPP_CHECKSUM_CURRENT&quot; ]; then
    	BUILD_COOLAPP=1
    fi
else
	echo &quot;newfile&quot; &gt; $DOCKERFILE_COOLAPP_CHECKSUM_FILE
    echo &quot;      $DOCKERFILE_COOLAPP_CHECKSUM_FILE created&quot;
    BUILD_COOLAPP=1
fi

echo &quot;      BUILD_BASE=$BUILD_COOLAPP&quot;

if [ &quot;$BUILD_COOLAPP&quot; == &quot;1&quot; ]; then
	rm -frR dist/
	python3 setup.py sdist
	rm -frR container/app/dist
	mkdir container/app/dist
	cp -vf dist/* container/app/dist/
	cp -vf openapi/* container/app/dist/
	cd container/app
	sudo docker build --no-cache -t cool-app .
	EXIT_STATUS=$?
	cd $OLDPWD
	echo &quot;      status=$EXIT_STATUS&quot;
	echo &quot;      Current working directory: $PWD&quot;
	if [ &quot;$EXIT_STATUS&quot; != &quot;0&quot; ]
	then
		echo &quot;      COOLAPP failed to build&quot;
		exit 1
	fi
    echo $DOCKERFILE_COOLAPP_CHECKSUM_CURRENT &gt; $DOCKERFILE_COOLAPP_CHECKSUM_FILE
	echo &quot;      COOLAPP build successful&quot;
    echo &quot;      Pushing to registry&quot;
    sudo docker tag cool-app:$BUILD_NUMBER $DOCKER_REGISTRY_HOST:$DOCKER_REGISTRY_PORT/cool-app
    EXIT_STATUS=$?
    if [ &quot;$EXIT_STATUS&quot; != &quot;0&quot; ]
	then
		echo &quot;      Failed to tag image&quot;
		exit 1
	fi
    sudo docker push $DOCKER_REGISTRY_HOST:$DOCKER_REGISTRY_PORT/cool-app
    EXIT_STATUS=$?
    if [ &quot;$EXIT_STATUS&quot; != &quot;0&quot; ]
	then
		echo &quot;      Failed to push to the registry&quot;
		exit 1
	fi
    echo &quot;      Succesfully pushed to the registry with tag: cool-app:$BUILD_NUMBER&quot;
    
fi

echo
echo
echo &quot;========================================&quot;
echo
echo &quot;NOTE that at hte moment the build needs&quot;
echo &quot;to be triggered manually and the APP&quot;
echo &quot;will build every time. Automation is WIP&quot;
echo
echo &quot;There is a schedule for an hourly build&quot;
echo &quot;but still no trigger per say.&quot;
echo
echo &quot;========================================&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19.1">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>5</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
  </buildWrappers>
</project>