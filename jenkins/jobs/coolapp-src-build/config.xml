<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Building the application source</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SRC_EXPECTED_FILE</name>
          <description></description>
          <defaultValue>dist/cool_app-0.0.3.tar.gz</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SRC_OLD_CHECKSUM_FILE</name>
          <description></description>
          <defaultValue>checksum_dist</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SRC_BUILD_FLAG_FILE</name>
          <description></description>
          <defaultValue>/tmp/coolapp-src-build</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/nicc777/learning-kubernetes-basics</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/appsrc-0.0.3</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

EXPECTED_FILE=$SRC_EXPECTED_FILE
OLD_CHECKSUM_FILE=$SRC_OLD_CHECKSUM_FILE
OLD_CHECKSUM_VALUE=&quot;&quot;
NEW_CHECKSUM_VALUE=&quot;&quot;
BUILD_FLAG_FILE=$SRC_BUILD_FLAG_FILE

rm -vf $BUILD_FLAG_FILE

cd ./app-src/
echo &quot;Build source - Build nr $BUILD_NUMBER&quot;

rm -frR dist/

echo &quot;========================================&quot;
echo &quot;   Checking for Previous Build&quot;
echo &quot;========================================&quot;

if test -f &quot;$OLD_CHECKSUM_FILE&quot;; then
    echo &quot;      $OLD_CHECKSUM_FILE exist&quot;
    OLD_CHECKSUM_VALUE=`cat $OLD_CHECKSUM_FILE | head -1 | awk &apos;{print \$1}&apos;`
    echo &quot;   Previous BASE file checksum: $OLD_CHECKSUM_VALUE&quot;
else
	echo &quot;newfile&quot; &gt; $OLD_CHECKSUM_FILE
    OLD_CHECKSUM_VALUE=&quot;newfile&quot;
    echo &quot;      $OLD_CHECKSUM_FILE created&quot;
fi

echo &quot;========================================&quot;
echo &quot;   Updating Checksum for Source &quot;
echo &quot;========================================&quot;

rm -vf /tmp/sourced_cat
cat `find ./cool_app/ -type f -iname &quot;*.py&quot;` &gt; /tmp/sourced_cat
NEW_CHECKSUM_VALUE=`sha256sum /tmp/sourced_cat | awk &apos;{print \$1}&apos;`

echo &quot;========================================&quot;
echo &quot;   Check for Building Source&quot;
echo &quot;========================================&quot;

echo
if [ &quot;$OLD_CHECKSUM_VALUE&quot; != &quot;$NEW_CHECKSUM_VALUE&quot; ]; then
    python3 setup.py sdist
    ls -lahrt $EXPECTED_FILE
    if [ -f &quot;$EXPECTED_FILE&quot; ]; then
        echo &quot;Build was completed succesfully&quot;
    else
        echo &quot;Build FAILED&quot;
        exit 1
    fi
    touch $BUILD_FLAG_FILE
    echo &quot;$NEW_CHECKSUM_VALUE&quot; &gt; $OLD_CHECKSUM_FILE
    echo &quot;SOURCE UPDATED: TRUE&quot;
else
     echo &quot;SOURCE UPDATED: FALSE&quot;
fi
echo

echo &quot;========================================&quot;
echo &quot;   DONE&quot;
echo &quot;========================================&quot;

echo
echo
echo &quot;========================================&quot;
echo
echo &quot;NOTE that at The moment the build needs&quot;
echo &quot;to be triggered manually and the APP&quot;
echo &quot;will build every time. Automation is WIP&quot;
echo
echo &quot;There is a schedule for an hourly build&quot;
echo &quot;but still no trigger per say.&quot;
echo
echo &quot;========================================&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19.1">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>10</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
  </buildWrappers>
</project>