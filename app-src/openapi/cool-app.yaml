openapi: "3.0.2"
info:
  title: Cool-App
  version: "1.0"
servers:
  - url: "{protocol}://{server}:{port}/v1"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      server:
        default: "127.0.0.1"
        description: A server hostname or IP address
      port:
        default: "8080"
        description: The TCP port the server is listening on

paths:

  /user-profiles/search:
    get:
      summary: "Search for a user's profile by e-mail address"
      description: "Requires a user email address to search for the user's profile in the database"
      operationId: cool_app.service_app.search_user_profiles
      parameters:
        - name: email_address
          in: query
          description: "An email address"
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/UserProfileResponse"
        "404":
          $ref: '#/components/responses/UserProfileNotFoundResponse'

  /user-profiles/{uid}:
    get:
      summary: "Get for a user's profile by UID"
      description: "Requires a user email address to search for the user's profile in the database"
      operationId: cool_app.service_app.get_user_profile
      parameters:
        - name: uid
          in: path
          description: "A unique user ID that was assigned during registration"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          $ref: "#/components/responses/UserProfileResponse"
        "404":
          $ref: '#/components/responses/UserProfileNotFoundResponse'

components:

  responses:

    UserProfileResponse:
      description: "The user profile"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileSearchResult'

    UserProfileNotFoundResponse:
      description: "The user profile was not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericError'

  schemas:

    UserProfileSearchResult:
      type: object
      properties:
        UserProfileLink:
          type: string
          description: 'URL to the user profile'
          example: /user-profiles/123
        UserId:
          type: int
          description: 'The unique ID of the user'
          example: 123
        UserAlias:
          type: string
          description: 'The alias of the user'
          example: 'User123'
        UserEmailAddress:
          type: string
          description: 'The e-mail address of the user'
          example: 'user123@example.tld'
        AccountStatus:
          type: int
          description: 'The profile status: 1=active; 0=disabled. Only users with active profiles can view and post notes'
          example: 1
      required:
        - UserAlias

    GenericError:
      type: object
      properties:
        ErrorCode:
          type: int
          description: "An application specific code, which may or may not be the same as the HTTP error code"
          example: 404
        ErrorMessage:
          type: string
          description: "A more detailed explanation of the error"
          example: "There was an error processing your request"
      required:
        - ErrorCode
        - ErrorMessage
