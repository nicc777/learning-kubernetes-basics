openapi: "3.0.2"
info:
  title: Cool-App
  version: "1.0"
servers:
  - url: "{protocol}://{server}:{port}/v1"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      server:
        default: "127.0.0.1"
        description: A server hostname or IP address
      port:
        default: "8080"
        description: The TCP port the server is listening on

paths:
  /welcome:    
    get:
      summary: "A simple welcome message service"
      description: "A very simple service endpoint just to test the service"
      operationId: cool_app.service_app.welcome
      parameters:
        - name: message
          in: query
          description: "A user friendly message"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WelcomeMessage"

  /user-profile:
    get:
      summary: "Get a user's profile"
      description: "Requires a user email address to search for the user's profile in the database"
      operationId: cool_app.service_app.get_user_profile
      parameters:
        - name: email_address
          in: query
          description: "An email address"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

components:

  schemas:

    UserProfile:
      type: object
      properties:
        UserId:
          type: int
          description: 'The unique ID of the user'
          example: 123
        UserAlias:
          type: string
          description: 'The alias of the user'
          example: 'User123'
        UserEmailAddress:
          type: string
          description: 'The e-mail address of the user'
          example: 'user123@example.tld'
        AccountStatus:
          type: int
          description: 'The profile status: 1=active; 0=disabled. Only users with active profiles can view and post notes'
          example: 1
      required:
        - UserAlias

    WelcomeMessage:
      type: object
      example: "Hello World"
      properties:
        message:
          type: string
          description: The message
      required:
        - message
